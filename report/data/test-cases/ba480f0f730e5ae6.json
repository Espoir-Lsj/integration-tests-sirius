{
  "uid" : "ba480f0f730e5ae6",
  "name" : "id错误",
  "fullName" : "test_case.test_order_management.TestAdhocOrder#test_accept",
  "historyId" : "80430b84beb6d2af3519293b819553fb",
  "time" : {
    "start" : 1622534740599,
    "stop" : 1622534740600,
    "duration" : 1
  },
  "status" : "broken",
  "statusMessage" : "KeyError: '/adhocOrder/accept'",
  "statusTrace" : "self = <test_case.test_order_management.TestAdhocOrder object at 0x117e38710>\nurl = '/adhocOrder/accept', title = 'id错误', case = '{\"id\": 9999}'\nexpected = '未查询到该临调订单，请刷新重试', AdhocOrder_accept = 1710\n\n    @pytest.mark.parametrize('url,title,case,expected', data)\n    @allure.story('临调订单——接收临调单')\n    @allure.title('{title}')\n    def test_accept(self, url, title, case, expected, AdhocOrder_accept):\n>       body = request.body_replace(url, case)\n\ntest_case/test_order_management.py:115: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_case/common/request.py:20: in body_replace\n    return body._body_replace1(body._get_body(url), data, body._keyNumber(body._get_body(url)), kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_config.yamlconfig.timeid object at 0x117e12dd0>\npath = '/adhocOrder/accept'\n\n    def _get_body(self, path):\n>       body = eval(str(body_data[path].copy()))\nE       KeyError: '/adhocOrder/accept'\n\ntest_config/yamlconfig.py:67: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "AdhocOrder_accept",
    "time" : {
      "start" : 1622534740423,
      "stop" : 1622534740597,
      "duration" : 174
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "res_data",
    "time" : {
      "start" : 1622534734778,
      "stop" : 1622534734778,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "AdhocOrder_get_id",
    "time" : {
      "start" : 1622534735501,
      "stop" : 1622534735623,
      "duration" : 122
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1622534729324,
      "stop" : 1622534729370,
      "duration" : 46
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "AdhocOrder_get_data",
    "time" : {
      "start" : 1622534734778,
      "stop" : 1622534735501,
      "duration" : 723
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: '/adhocOrder/accept'",
    "statusTrace" : "self = <test_case.test_order_management.TestAdhocOrder object at 0x117e38710>\nurl = '/adhocOrder/accept', title = 'id错误', case = '{\"id\": 9999}'\nexpected = '未查询到该临调订单，请刷新重试', AdhocOrder_accept = 1710\n\n    @pytest.mark.parametrize('url,title,case,expected', data)\n    @allure.story('临调订单——接收临调单')\n    @allure.title('{title}')\n    def test_accept(self, url, title, case, expected, AdhocOrder_accept):\n>       body = request.body_replace(url, case)\n\ntest_case/test_order_management.py:115: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_case/common/request.py:20: in body_replace\n    return body._body_replace1(body._get_body(url), data, body._keyNumber(body._get_body(url)), kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_config.yamlconfig.timeid object at 0x117e12dd0>\npath = '/adhocOrder/accept'\n\n    def _get_body(self, path):\n>       body = eval(str(body_data[path].copy()))\nE       KeyError: '/adhocOrder/accept'\n\ntest_config/yamlconfig.py:67: KeyError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3e9997a2b03d5fa7",
      "name" : "log",
      "source" : "3e9997a2b03d5fa7.txt",
      "type" : "text/plain",
      "size" : 413
    }, {
      "uid" : "8ee85ada7d5934e3",
      "name" : "stderr",
      "source" : "8ee85ada7d5934e3.txt",
      "type" : "text/plain",
      "size" : 435
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "res_data::0",
    "time" : {
      "start" : 1622534743138,
      "stop" : 1622534743138,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "AdhocOrder_get_id::0",
    "time" : {
      "start" : 1622534743130,
      "stop" : 1622534743130,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "临调订单——接收临调单"
  }, {
    "name" : "feature",
    "value" : "订单管理"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('res_data')"
  }, {
    "name" : "parentSuite",
    "value" : "test_case"
  }, {
    "name" : "suite",
    "value" : "test_order_management"
  }, {
    "name" : "subSuite",
    "value" : "TestAdhocOrder"
  }, {
    "name" : "host",
    "value" : "liangshoujiedeMacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "9873-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.test_order_management"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case",
    "value" : "'{\"id\": 9999}'"
  }, {
    "name" : "expected",
    "value" : "'未查询到该临调订单，请刷新重试'"
  }, {
    "name" : "title",
    "value" : "'id错误'"
  }, {
    "name" : "url",
    "value" : "'/adhocOrder/accept'"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "@pytest.mark.usefixtures('res_data')" ]
  },
  "source" : "ba480f0f730e5ae6.json",
  "parameterValues" : [ "'{\"id\": 9999}'", "'未查询到该临调订单，请刷新重试'", "'id错误'", "'/adhocOrder/accept'" ]
}