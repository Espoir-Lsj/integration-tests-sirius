{
  "uid" : "df78ff954405bdf",
  "name" : "test_create_tools[仓库为空-case1-请选择仓库]",
  "fullName" : "test_case.test_material_management.TestPackagingOrder#test_create_tools",
  "historyId" : "599a7a1e013c045a9bbad6eb067e8812",
  "time" : {
    "start" : 1622534734651,
    "stop" : 1622534734651,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "TypeError: exceptions must derive from BaseException",
  "statusTrace" : "self = <test_case.common.Material_Management.PackagingOrder object at 0x117c7d810>\nkitTemplateId = 21, warehouseId = 6, kitTemplateName = '钢板支架工具包'\ngoodsList = [None, 292], goodsLotInfoIdList = [None, 75]\ngoodsQuantityList = [10, 10]\n\n    def create_tools(self, kitTemplateId=None, warehouseId=None, kitTemplateName=None,\n                     goodsList=None, goodsLotInfoIdList=None, goodsQuantityList=None):\n        \"\"\"\n    \n        :param kitTemplateId: 工具包ID\n        :param warehouseId: 仓库ID\n        :param kitTemplateName: 工具包名称\n        :param goodsList: 工具包内的物资 列表\n        :param goodsLotInfoIdList: 物资的lotInfo 列表\n        :param goodsQuantityList: 物资的数量 列表\n        :return:\n        \"\"\"\n        url = '/packagingOrder/create'\n        body = {\n            \"kitDetailUiBeans\": [{\n                \"goodsDetails\": [],\n                \"kitTemplateId\": kitTemplateId,\n                \"kitTemplateName\": kitTemplateName,\n                \"serial\": 1\n            }],\n            \"warehouseId\": warehouseId\n        }\n        for x, y, z in zip(goodsList, goodsLotInfoIdList, goodsQuantityList):\n            goodsDetail = {\n                \"goodsId\": x,\n                \"goodsLotInfoId\": y,\n                \"goodsQuantity\": z\n            }\n            body['kitDetailUiBeans'][0]['goodsDetails'].append(goodsDetail)\n        response = request.post_body01(url, body)\n        try:\n>           assert response['msg'] == '请求成功'\nE           AssertionError\n\ntest_case/common/Material_Management.py:485: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_case.test_material_management.TestPackagingOrder object at 0x104e0ced0>\n\n    @pytest.fixture(scope='class')\n    def get_create_tools(self):\n        test = Material_Management.PackagingOrder()\n        warehouseId = test.get_warehouse()\n        templateIds = test.get_packagingFindTools(warehouseId)\n        infoList = test.add_tools(templateIds, warehouseId)\n        kitTemplateId = infoList[0]\n        kitTemplateName = infoList[1]\n        warehouseId = infoList[2]\n        goodsList = infoList[3]\n        goodsLotInfoIdList = infoList[4]\n        goodsQuantityList = infoList[5]\n        response = test.create_tools(kitTemplateId=kitTemplateId, warehouseId=warehouseId,\n                                     kitTemplateName=kitTemplateName, goodsList=goodsList,\n>                                    goodsLotInfoIdList=goodsLotInfoIdList, goodsQuantityList=goodsQuantityList)\n\ntest_case/test_material_management.py:531: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_case.common.Material_Management.PackagingOrder object at 0x117c7d810>\nkitTemplateId = 21, warehouseId = 6, kitTemplateName = '钢板支架工具包'\ngoodsList = [None, 292], goodsLotInfoIdList = [None, 75]\ngoodsQuantityList = [10, 10]\n\n    def create_tools(self, kitTemplateId=None, warehouseId=None, kitTemplateName=None,\n                     goodsList=None, goodsLotInfoIdList=None, goodsQuantityList=None):\n        \"\"\"\n    \n        :param kitTemplateId: 工具包ID\n        :param warehouseId: 仓库ID\n        :param kitTemplateName: 工具包名称\n        :param goodsList: 工具包内的物资 列表\n        :param goodsLotInfoIdList: 物资的lotInfo 列表\n        :param goodsQuantityList: 物资的数量 列表\n        :return:\n        \"\"\"\n        url = '/packagingOrder/create'\n        body = {\n            \"kitDetailUiBeans\": [{\n                \"goodsDetails\": [],\n                \"kitTemplateId\": kitTemplateId,\n                \"kitTemplateName\": kitTemplateName,\n                \"serial\": 1\n            }],\n            \"warehouseId\": warehouseId\n        }\n        for x, y, z in zip(goodsList, goodsLotInfoIdList, goodsQuantityList):\n            goodsDetail = {\n                \"goodsId\": x,\n                \"goodsLotInfoId\": y,\n                \"goodsQuantity\": z\n            }\n            body['kitDetailUiBeans'][0]['goodsDetails'].append(goodsDetail)\n        response = request.post_body01(url, body)\n        try:\n            assert response['msg'] == '请求成功'\n        except Exception:\n>           raise response\nE           TypeError: exceptions must derive from BaseException\n\ntest_case/common/Material_Management.py:487: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "res_data",
    "time" : {
      "start" : 1622534733949,
      "stop" : 1622534733949,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_create_tools",
    "time" : {
      "start" : 1622534734177,
      "stop" : 1622534734431,
      "duration" : 254
    },
    "status" : "broken",
    "statusMessage" : "TypeError: exceptions must derive from BaseException\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"/usr/local/lib/python3.7/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/usr/local/lib/python3.7/site-packages/_pytest/fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/Users/liangshoujie/PycharmProjects/integration-tests-sirius/test_case/test_material_management.py\", line 531, in get_create_tools\n    goodsLotInfoIdList=goodsLotInfoIdList, goodsQuantityList=goodsQuantityList)\n  File \"/Users/liangshoujie/PycharmProjects/integration-tests-sirius/test_case/common/Material_Management.py\", line 487, in create_tools\n    raise response\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1622534729324,
      "stop" : 1622534729370,
      "duration" : 46
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "res_data::0",
    "time" : {
      "start" : 1622534734698,
      "stop" : 1622534734698,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "创建加工组包"
  }, {
    "name" : "feature",
    "value" : "物资管理"
  }, {
    "name" : "story",
    "value" : "加工组包"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('res_data')"
  }, {
    "name" : "parentSuite",
    "value" : "test_case"
  }, {
    "name" : "suite",
    "value" : "test_material_management"
  }, {
    "name" : "subSuite",
    "value" : "TestPackagingOrder"
  }, {
    "name" : "host",
    "value" : "liangshoujiedeMacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "9873-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.test_material_management"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case",
    "value" : "{'warehouseId': None}"
  }, {
    "name" : "expected",
    "value" : "'请选择仓库'"
  }, {
    "name" : "title",
    "value" : "'仓库为空'"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "@pytest.mark.usefixtures('res_data')" ]
  },
  "source" : "df78ff954405bdf.json",
  "parameterValues" : [ "{'warehouseId': None}", "'请选择仓库'", "'仓库为空'" ]
}